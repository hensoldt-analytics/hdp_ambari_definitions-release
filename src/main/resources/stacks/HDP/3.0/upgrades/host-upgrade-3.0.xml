<?xml version="1.0"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<upgrade xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="upgrade-pack.xsd">
    <target>3.0.*.*</target>
    <target-stack>HDP-3.0</target-stack>
    <skip-failures>false</skip-failures>
    <skip-service-check-failures>false</skip-service-check-failures>
    <type>HOST_ORDERED</type>
    <prerequisite-checks>
        <check>org.apache.ambari.server.checks.LZOCheck</check>
        <configuration>
            <!-- Configuration properties for all pre-reqs including required pre-reqs -->
            <check-properties name="org.apache.ambari.server.checks.HiveDynamicServiceDiscoveryCheck">
                <property name="min-failure-stack-version">HDP-2.3.0.0</property>
            </check-properties>
        </configuration>
    </prerequisite-checks>
    <order>
        <group xsi:type="cluster" name="PRE_CLUSTER" title="Prepare Upgrade">
            <direction>UPGRADE</direction>

            <skippable>true</skippable>
            <supports-auto-skip-failure>false</supports-auto-skip-failure>

            <execute-stage service="TEZ" component="TEZ_CLIENT" title="Check Tez Tarball">
                <task xsi:type="execute" hosts="any">
                    <script>scripts/pre_upgrade.py</script>
                    <function>prepare</function>
                </task>
            </execute-stage>
        </group>

        <group xsi:type="cluster" name="PREPARE_BACKUPS" title="Prepare Backups">
            <direction>UPGRADE</direction>
            <skippable>true</skippable>
            <supports-auto-skip-failure>false</supports-auto-skip-failure>

            <execute-stage service="OOZIE" component="OOZIE_SERVER" title="Backup Oozie Database">
                <task xsi:type="manual">
                    <message>Before continuing, please backup the Oozie Server database referenced by the Oozie server
                        located on {{hosts.all}}.
                    </message>
                </task>
            </execute-stage>

            <execute-stage service="HIVE" component="HIVE_METASTORE" title="Backup Hive Metastore">
                <task xsi:type="manual">
                    <message>Before continuing, please backup the Hive Metastore database referenced by the Hive
                        Metastore service(s) located on the following host(s): {{hosts.all}}.
                    </message>
                </task>
            </execute-stage>

            <execute-stage service="HBASE" component="HBASE_MASTER" title="Pre Upgrade HBase Backup">
                <task xsi:type="execute" hosts="master">
                    <script>scripts/hbase_upgrade.py</script>
                    <function>take_snapshot</function>
                </task>
            </execute-stage>


            <execute-stage service="RANGER" component="RANGER_ADMIN" title="Backup Ranger Database">
                <task xsi:type="manual">
                    <message>Before continuing, please backup the Ranger Admin database on the following host(s):
                        {{hosts.all}}.
                    </message>
                </task>
            </execute-stage>

            <execute-stage service="RANGER_KMS" component="RANGER_KMS_SERVER" title="Backup Ranger KMS Database">
                <task xsi:type="manual">
                    <message>Before continuing, please backup Ranger KMS database on the following host(s):
                        {{hosts.all}}.
                    </message>
                </task>
            </execute-stage>

            <execute-stage service="ZEPPELIN" component="ZEPPELIN_MASTER" title="Pre Upgrade Zeppelin notebooks Backup">
                <task xsi:type="manual">
                    <message>Before continuing, please backup Zeppelin notebooks directory on the following host(s):
                        {{hosts.all}}.
                    </message>
                </task>
            </execute-stage>
        </group>

        <group xsi:type="cluster" name="Upgrade service configs" title="Upgrade service configs">
            <direction>UPGRADE</direction> <!--  prevent config changes on downgrade -->
            <skippable>true</skippable> <!-- May fix configuration problems manually -->

            <execute-stage service="SPARK2" component="SPARK2_JOBHISTORYSERVER" title="Create spark.yarn.keytab/principal based on spark history keytab/principal">
                <task xsi:type="server_action" class="org.apache.ambari.server.serveraction.upgrades.FixSparkYarnIdentity">
                    <summary>Adding spark.yarn.keytab/principal properties</summary>
                </task>
            </execute-stage>

            <!-- ZEPPELIN -->
            <execute-stage service="ZEPPELIN" component="ZEPPELIN_MASTER" title="Apply zeppelin.notebook.storage config">
                <task xsi:type="server_action" class="org.apache.ambari.server.serveraction.upgrades.FixNotebookStorage">
                    <summary>Adjusting Zeppelin Notebook properties</summary>
                </task>
            </execute-stage>

            <execute-stage service="YARN" title="Apply config changes for Timeline Reader">
                <task xsi:type="server_action" class="org.apache.ambari.server.serveraction.upgrades.FixTimelineReaderAddress">
                    <summary>Setting YARN Timeline Reader Url</summary>
                </task>
            </execute-stage>

            <execute-stage service="KAFKA" component="KAFKA_BROKER" title="Apply config changes for Kafka PLAINTEXTSASL changes">
                <task xsi:type="configure" id="hdp_3_0_x_kafka_plaintext_sasl_removal"/>
            </execute-stage>

            <execute-stage service="ATLAS" component="ATLAS_SERVER" title="Updating Atlas security protocol for Kafka">
                <task xsi:type="configure" id="hdp_3_0_x_atlas_plaintext_sasl_removal"/>
            </execute-stage>

            <!-- RANGER -->
            <execute-stage service="RANGER" component="RANGER_TAGSYNC" title="Updating Tagsync security protocol for Kafka">
                <task xsi:type="configure" id="hdp_3_0_x_tagsync_plaintext_sasl_removal"/>
            </execute-stage>
        </group>

        <!--
        In a HOST_ORDERED upgrade, this placeholder group is expanded by the number of hosts passed
        when creating the upgrade.  For starters, this will include "stop" commands, a manual
        verification task, and the "start" commands as indicated by the processing element.
        If we get to the point where we need additional flexibility, it will get added at that time.
        -->
        <group xsi:type="host-order" name="HOST_ORDER" title="Upgrade All Hosts">
            <skippable>true</skippable>
        </group>


        <!--
        After processing this group, the user-specified Kerberos descriptor will be updated to work with
        the new stack-level Kerberos descriptor.
        -->
        <group xsi:type="cluster" name="UPDATE_KERBEROS_DESCRIPTORS" title="Update Kerberos Descriptors">
            <condition xsi:type="security" type="kerberos"/>
            <execute-stage title="Update the user-specified Kerberos descriptor">
                <task xsi:type="server_action" class="org.apache.ambari.server.serveraction.upgrades.UpgradeUserKerberosDescriptor"/>
            </execute-stage>
        </group>

        <group xsi:type="cluster" name="ALL_HOST_OPS" title="Finalize Hosts">
            <scope>COMPLETE</scope>
            <execute-stage title="Update remaining HDP stack to {{version}}">
                <task xsi:type="execute">
                    <script>scripts/stack_select_set_all.py</script>
                    <function>actionexecute</function>
                </task>
            </execute-stage>
        </group>

        <group xsi:type="cluster" name="FINALIZE_PRE_CHECK" title="Finalize {{direction.text.proper}} Pre-Check">
            <direction>UPGRADE</direction>

            <execute-stage title="Check Component Versions">
                <task xsi:type="server_action" class="org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckAction" />
            </execute-stage>
        </group>

        <group xsi:type="cluster" name="POST_CLUSTER" title="Finalize {{direction.text.proper}}">
            <skippable>true</skippable>
            <supports-auto-skip-failure>false</supports-auto-skip-failure>

            <execute-stage title="Confirm Finalize">
                <direction>UPGRADE</direction>
                <task xsi:type="manual">
                    <message>Please confirm you are ready to finalize.</message>
                </task>
            </execute-stage>

            <execute-stage service="HBASE" component="HBASE_MASTER" title="Delete HBase snapshots">
                <direction>UPGRADE</direction>
                <task xsi:type="manual">
                    <message>You can now remove any HBase snapshots which were created at the beginning of the upgrade. To see existing snapshots, use the following HBase shell command:</message>
                    <message>hbase> list_snapshots</message>
                    <message>Once you have found an existing snapshot which you would like to remove, you can use the following command:</message>
                    <message>hbase> delete_snapshot 'snapshotName'</message>
                </task>
            </execute-stage>

            <execute-stage service="HDFS" component="NAMENODE" title="Execute HDFS Finalize">
                <task xsi:type="execute" hosts="master">
                    <script>scripts/namenode.py</script>
                    <function>finalize_non_rolling_upgrade</function>
                </task>
            </execute-stage>

            <execute-stage title="Save Cluster State">
                <task xsi:type="server_action" class="org.apache.ambari.server.serveraction.upgrades.FinalizeUpgradeAction">
                </task>
            </execute-stage>

        </group>
    </order>

    <!-- Steps defined at "processing" section are ignored during the HOU.
    Instead of that, upgrade stages are automatically generated by the "HOST_ORDER" placeholder group -->
    <processing>
        <service>
            <component>
                <upgrade>
                </upgrade>
            </component>
        </service>
    </processing>
</upgrade>
